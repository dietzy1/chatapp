package repository

import (
	"context"
	"fmt"

	"github.com/dietzy1/chatapp/service"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo/options"
)

func (r *repository) CreateMessage(ctx context.Context, msg service.CreateMessage) (service.Message, error) {

	return service.Message{}, nil
}

const database = "Message-Database"

// We want to add in some timestamp stuff later perhabs
func (r *repository) GetMessages(ctx context.Context, chatroomId, channelId string) ([]service.Message, error) {
	collection := r.mongodb.client.Database(database).Collection(chatroomId)

	messages := []service.Message{}

	//find 50 latests messages based on entry to database
	//Use sort and setlimit operator

	cursor, err := collection.Find(ctx, bson.M{"channelId": channelId}, options.Find().SetSort(bson.M{"timestamp": -1}).SetLimit(50))
	if err != nil {
		return messages, err
	}
	defer cursor.Close(ctx)

	if err = cursor.All(ctx, &messages); err != nil {
		return messages, fmt.Errorf("failed to decode messages: %w", err)
	}

	return messages, nil
}

func (r *repository) AddMessage(ctx context.Context, msg service.Message) error {
	collection := r.mongodb.client.Database(database).Collection(msg.ChatroomId)
	_, err := collection.InsertOne(ctx, msg)
	if err != nil {
		return fmt.Errorf("failed to insert message: %w", err)
	}

	return nil
}

// TODO:
// This is probaly incorrect needs to be fixed
/* func (r *repository) UpdateMessage(ctx context.Context, msg service.Message) error {
	collection := r.mongodb.client.Database(database).Collection(msg.ChatRoomUuid)
	_, err := collection.UpdateOne(ctx, bson.M{"messageuuid": msg.MessageUuid}, bson.M{"$set": msg})
	if err != nil {
		return err
	}

	return nil
} */

// TODO:
// Autogenerated need to validate that it actually is correct code5
/* func (r *repository) DeleteMessage(ctx context.Context, msg service.Message) error {
	collection := r.mongodb.client.Database(database).Collection(msg.ChatRoomUuid)
	_, err := collection.DeleteOne(ctx, bson.M{"messageUuid": msg.MessageUuid})
	if err != nil {
		return err
	}
	return nil
} */
